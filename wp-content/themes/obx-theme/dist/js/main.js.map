{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://obx-theme/./src/js/main.js","webpack://obx-theme/./src/js/components/navigation.js","webpack://obx-theme/./src/js/components/header.js"],"sourcesContent":["/**\n * Main frontend JavaScript file\n */\n\n// Import styles\nimport '../scss/main.scss';\n\n// Import components\nimport navigation from './components/navigation';\nimport initHeader from './components/header';\n\n// Mobile menu functionality\nfunction initMobileMenu() {\n  const menuToggle = document.querySelector('.menu-toggle');\n  const mainNav = document.querySelector('.main-navigation');\n  const navMenu = mainNav?.querySelector('ul');\n  const body = document.body;\n\n  if (menuToggle && mainNav && navMenu) {\n    menuToggle.addEventListener('click', () => {\n      menuToggle.classList.toggle('active');\n      navMenu.classList.toggle('active');\n      body.classList.toggle('mobile-menu-active');\n      body.classList.toggle('menu-active');\n    });\n\n    // Close menu when clicking outside\n    document.addEventListener('click', (e) => {\n      if (!navMenu.contains(e.target) && !menuToggle.contains(e.target)) {\n        menuToggle.classList.remove('active');\n        navMenu.classList.remove('active');\n        body.classList.remove('mobile-menu-active');\n        body.classList.remove('menu-active');\n      }\n    });\n\n    // Close menu when clicking menu items\n    const menuItems = mainNav.querySelectorAll('a');\n    menuItems.forEach(item => {\n      item.addEventListener('click', () => {\n        menuToggle.classList.remove('active');\n        navMenu.classList.remove('active');\n        body.classList.remove('mobile-menu-active');\n        body.classList.remove('menu-active');\n      });\n    });\n  }\n}\n\n// Smooth scroll and active menu item functionality\nfunction initScrollBehavior() {\n  // Get all menu links that point to sections\n  const menuLinks = document.querySelectorAll('a[href^=\"#\"]');\n  const sections = document.querySelectorAll('section[id]');\n  \n  // Smooth scroll for menu links\n  menuLinks.forEach(link => {\n    link.addEventListener('click', function(e) {\n      e.preventDefault();\n      const targetId = this.getAttribute('href');\n      const targetSection = document.querySelector(targetId);\n      \n      if (targetSection) {\n        targetSection.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      }\n    });\n  });\n\n  // Active menu item on scroll\n  function setActiveMenuItem() {\n    const scrollPosition = window.scrollY + 100; // Offset for better trigger point\n    \n    sections.forEach(section => {\n      const sectionTop = section.offsetTop - 100; // Offset for better trigger point\n      const sectionHeight = section.offsetHeight;\n      const sectionId = section.getAttribute('id');\n      \n      if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {\n        // Remove active class from all menu items\n        menuLinks.forEach(link => {\n          link.classList.remove('active');\n        });\n        \n        // Add active class to current section's menu item\n        const activeLink = document.querySelector(`a[href=\"#${sectionId}\"]`);\n        if (activeLink) {\n          activeLink.classList.add('active');\n        }\n      }\n    });\n  }\n\n  // Add scroll event listener\n  window.addEventListener('scroll', setActiveMenuItem);\n  // Initial check for active menu item\n  setActiveMenuItem();\n}\n\n// DOM ready\ndocument.addEventListener('DOMContentLoaded', function() {\n  console.log('OBX Theme initialized');\n  \n  // Initialize navigation\n  navigation();\n  \n  // Initialize header\n  initHeader();\n  \n  // Initialize scroll behavior\n  initScrollBehavior();\n\n  // Initialize mobile menu\n  initMobileMenu();\n}); ","/**\n * File navigation.js.\n *\n * Handles toggling the navigation menu for small screens and enables TAB key\n * navigation support for dropdown menus.\n */\nconst navigation = () => {\n  const siteNavigation = document.getElementById('site-navigation');\n\n  // Return early if the navigation doesn't exist.\n  if (!siteNavigation) {\n    return;\n  }\n\n  const button = siteNavigation.querySelector('.menu-toggle');\n\n  // Return early if the button doesn't exist.\n  if (!button) {\n    return;\n  }\n\n  const menu = siteNavigation.getElementsByTagName('ul')[0];\n\n  // Hide menu toggle button if menu is empty and return early.\n  if (!menu) {\n    button.style.display = 'none';\n    return;\n  }\n\n  if (!menu.classList.contains('nav-menu')) {\n    menu.classList.add('nav-menu');\n  }\n\n  // Toggle the .toggled class and the aria-expanded value each time the button is clicked.\n  button.addEventListener('click', function() {\n    siteNavigation.classList.toggle('toggled');\n\n    if (button.getAttribute('aria-expanded') === 'true') {\n      button.setAttribute('aria-expanded', 'false');\n    } else {\n      button.setAttribute('aria-expanded', 'true');\n    }\n  });\n\n  // Remove the .toggled class and set aria-expanded to false when the user clicks outside the navigation.\n  document.addEventListener('click', function(event) {\n    const isClickInside = siteNavigation.contains(event.target);\n\n    if (!isClickInside) {\n      siteNavigation.classList.remove('toggled');\n      button.setAttribute('aria-expanded', 'false');\n    }\n  });\n\n  // Get all the link elements within the menu.\n  const links = menu.getElementsByTagName('a');\n\n  // Get all the link elements with children within the menu.\n  const linksWithChildren = menu.querySelectorAll('.menu-item-has-children > a, .page_item_has_children > a');\n\n  // Toggle focus each time a menu link is focused or blurred.\n  for (const link of links) {\n    link.addEventListener('focus', toggleFocus, true);\n    link.addEventListener('blur', toggleFocus, true);\n  }\n\n  // Toggle focus each time a menu link with children receive a touch event.\n  for (const link of linksWithChildren) {\n    link.addEventListener('touchstart', toggleFocus, false);\n  }\n\n  /**\n   * Sets or removes .focus class on an element.\n   */\n  function toggleFocus() {\n    if (event.type === 'focus' || event.type === 'blur') {\n      let self = this;\n      // Move up through the ancestors of the current link until we hit .nav-menu.\n      while (!self.classList.contains('nav-menu')) {\n        // On li elements toggle the class .focus.\n        if (self.tagName.toLowerCase() === 'li') {\n          self.classList.toggle('focus');\n        }\n        self = self.parentNode;\n      }\n    }\n\n    if (event.type === 'touchstart') {\n      const menuItem = this.parentNode;\n      event.preventDefault();\n      for (const link of menuItem.parentNode.children) {\n        if (menuItem !== link) {\n          link.classList.remove('focus');\n        }\n      }\n      menuItem.classList.toggle('focus');\n    }\n  }\n};\n\nexport default navigation; ","/**\n * Header functionality\n */\n\nexport default function initHeader() {\n    const header = document.querySelector('.site-header');\n    if (!header) return;\n\n    let lastScrollTop = 0;\n    const scrollThreshold = 100; // Adjust this value to control when the floating effect starts\n\n    function handleScroll() {\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        \n        // Add floating class when scrolled past threshold\n        if (scrollTop > scrollThreshold) {\n            header.classList.add('is-floating');\n        } else {\n            header.classList.remove('is-floating');\n        }\n\n        lastScrollTop = scrollTop;\n    }\n\n    // Initial check\n    handleScroll();\n\n    // Add scroll listener\n    window.addEventListener('scroll', handleScroll, { passive: true });\n} "],"names":["document","addEventListener","menuToggle","mainNav","navMenu","body","console","log","siteNavigation","getElementById","button","querySelector","menu","getElementsByTagName","classList","contains","add","toggle","getAttribute","setAttribute","event","target","remove","_step","links","linksWithChildren","querySelectorAll","_iterator","_createForOfIteratorHelper","s","n","done","link","value","toggleFocus","err","e","f","_step2","_iterator2","style","display","type","self","this","tagName","toLowerCase","parentNode","menuItem","preventDefault","_step3","_iterator3","children","navigation","header","handleScroll","window","pageYOffset","documentElement","scrollTop","passive","initHeader","menuLinks","sections","setActiveMenuItem","scrollPosition","scrollY","forEach","section","sectionTop","offsetTop","sectionHeight","offsetHeight","sectionId","activeLink","concat","targetId","targetSection","scrollIntoView","behavior","block","initScrollBehavior","item"],"sourceRoot":""}