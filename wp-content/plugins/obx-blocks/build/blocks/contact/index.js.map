{"version":3,"file":"blocks/contact/index.js","mappings":"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EAAE3C,6CAAI;EACV4C,IAAI,EAAEA,CAAA,KAAM,IAAI,CAAE;AACtB,CAAC,CAAC;;;;;;;;;;;AClBF;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://obx-blocks/./src/blocks/contact/edit.js","webpack://obx-blocks/./src/blocks/contact/editor.scss?cf35","webpack://obx-blocks/./src/blocks/contact/index.js","webpack://obx-blocks/./src/blocks/contact/style.scss?6a43","webpack://obx-blocks/external window [\"wp\",\"blockEditor\"]","webpack://obx-blocks/external window [\"wp\",\"blocks\"]","webpack://obx-blocks/external window [\"wp\",\"components\"]","webpack://obx-blocks/external window [\"wp\",\"i18n\"]","webpack://obx-blocks/external window \"React\"","webpack://obx-blocks/webpack/bootstrap","webpack://obx-blocks/webpack/runtime/chunk loaded","webpack://obx-blocks/webpack/runtime/compat get default export","webpack://obx-blocks/webpack/runtime/define property getters","webpack://obx-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://obx-blocks/webpack/runtime/make namespace object","webpack://obx-blocks/webpack/runtime/jsonp chunk loading","webpack://obx-blocks/webpack/before-startup","webpack://obx-blocks/webpack/startup","webpack://obx-blocks/webpack/after-startup"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    useBlockProps,\n    RichText,\n    InspectorControls,\n    ColorPalette,\n    BlockControls,\n    BlockAlignmentToolbar,\n    AlignmentToolbar,\n} from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    TextControl,\n    RangeControl,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport './editor.scss';\n\nexport default function Edit({ attributes, setAttributes }) {\n    const {\n        heading,\n        introText,\n        emailConfig,\n        backgroundColor,\n        textColor,\n        accentColor,\n        align,\n        textAlign,\n        contentWidth,\n    } = attributes;\n\n    const blockProps = useBlockProps({\n        className: `obx-contact align${align}`,\n        style: {\n            textAlign: textAlign,\n            '--content-width': `${contentWidth}%`,\n            '--background-color': backgroundColor,\n            '--text-color': textColor,\n            '--accent-color': accentColor,\n        },\n    });\n\n    const updateEmailConfig = (key, value) => {\n        setAttributes({\n            emailConfig: {\n                ...emailConfig,\n                [key]: value,\n            },\n        });\n    };\n\n    return (\n        <>\n            <BlockControls>\n                <BlockAlignmentToolbar\n                    value={align}\n                    onChange={(newAlign) => setAttributes({ align: newAlign })}\n                    controls={['wide', 'full']}\n                />\n                <AlignmentToolbar\n                    value={textAlign}\n                    onChange={(newAlign) => setAttributes({ textAlign: newAlign })}\n                />\n            </BlockControls>\n            \n            <InspectorControls>\n                <PanelBody title={__('Content Settings', 'obx-blocks')}>\n                    <RangeControl\n                        label={__('Content Width (%)', 'obx-blocks')}\n                        value={contentWidth}\n                        onChange={(value) => setAttributes({ contentWidth: value })}\n                        min={30}\n                        max={100}\n                        step={5}\n                        help={__('Width of content area on desktop. Mobile will always be 100%.', 'obx-blocks')}\n                    />\n                </PanelBody>\n                <PanelBody title={__('Email Settings', 'obx-blocks')}>\n                    <TextControl\n                        label={__('Message Title', 'obx-blocks')}\n                        value={emailConfig.messageTitle}\n                        onChange={(value) => updateEmailConfig('messageTitle', value)}\n                        help={__('Title for email notifications', 'obx-blocks')}\n                    />\n                    <TextControl\n                        label={__('Receivers', 'obx-blocks')}\n                        value={emailConfig.receivers}\n                        onChange={(value) => updateEmailConfig('receivers', value)}\n                        help={__('Comma-separated list of email addresses', 'obx-blocks')}\n                    />\n                    <TextControl\n                        label={__('Success Message', 'obx-blocks')}\n                        value={emailConfig.successMessage}\n                        onChange={(value) => updateEmailConfig('successMessage', value)}\n                    />\n                    <TextControl\n                        label={__('Error Message', 'obx-blocks')}\n                        value={emailConfig.errorMessage}\n                        onChange={(value) => updateEmailConfig('errorMessage', value)}\n                    />\n                </PanelBody>\n                <PanelBody title={__('Colors', 'obx-blocks')}>\n                    <div className=\"components-base-control\">\n                        <label className=\"components-base-control__label\">\n                            {__('Background Color', 'obx-blocks')}\n                        </label>\n                        <ColorPalette\n                            value={backgroundColor}\n                            onChange={(color) => setAttributes({ backgroundColor: color })}\n                        />\n                    </div>\n                    \n                    <div className=\"components-base-control\">\n                        <label className=\"components-base-control__label\">\n                            {__('Text Color', 'obx-blocks')}\n                        </label>\n                        <ColorPalette\n                            value={textColor}\n                            onChange={(color) => setAttributes({ textColor: color })}\n                        />\n                    </div>\n                    \n                    <div className=\"components-base-control\">\n                        <label className=\"components-base-control__label\">\n                            {__('Accent Color', 'obx-blocks')}\n                        </label>\n                        <ColorPalette\n                            value={accentColor}\n                            onChange={(color) => setAttributes({ accentColor: color })}\n                        />\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>\n                <div className=\"obx-contact__content\">\n                    <div className=\"obx-contact__info\">\n                        <RichText\n                            tagName=\"h2\"\n                            className=\"obx-contact__heading\"\n                            value={heading}\n                            onChange={(value) => setAttributes({ heading: value })}\n                            placeholder={__('Enter heading', 'obx-blocks')}\n                            style={{ \n                                backgroundImage: accentColor ? `linear-gradient(transparent 60%, ${accentColor} 60%)` : 'none' \n                            }}\n                        />\n                        <RichText\n                            tagName=\"div\"\n                            className=\"obx-contact__intro-text\"\n                            value={introText}\n                            onChange={(value) => setAttributes({ introText: value })}\n                            placeholder={__('Enter introduction text', 'obx-blocks')}\n                        />\n                    </div>\n                    \n                    <div className=\"obx-contact__form-preview\">\n                        <div className=\"obx-contact__form\">\n                            <div className=\"obx-contact__form-field\">\n                                <label>{__('Name', 'obx-blocks')}</label>\n                                <input type=\"text\" disabled placeholder={__('Your name', 'obx-blocks')} />\n                            </div>\n                            <div className=\"obx-contact__form-field\">\n                                <label>{__('Email', 'obx-blocks')}</label>\n                                <input type=\"email\" disabled placeholder={__('Your email', 'obx-blocks')} />\n                            </div>\n                            <div className=\"obx-contact__form-field\">\n                                <label>{__('Message', 'obx-blocks')}</label>\n                                <textarea disabled placeholder={__('Your message', 'obx-blocks')} rows=\"5\"></textarea>\n                            </div>\n                            <button className=\"obx-contact__form-submit\" disabled>\n                                {__('Send Message', 'obx-blocks')}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n} ","// extracted by mini-css-extract-plugin\nexport {};","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\nimport './style.scss';\n\n/**\n * Register the block\n */\nregisterBlockType(metadata.name, {\n    edit: Edit,\n    save: () => null, // Server-side rendering with render.php\n}); ","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/contact/index\": 0,\n\t\"blocks/contact/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkobx_blocks\"] = globalThis[\"webpackChunkobx_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/contact/style-index\"], () => (__webpack_require__(\"./src/blocks/contact/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","RichText","InspectorControls","ColorPalette","BlockControls","BlockAlignmentToolbar","AlignmentToolbar","PanelBody","TextControl","RangeControl","Edit","attributes","setAttributes","heading","introText","emailConfig","backgroundColor","textColor","accentColor","align","textAlign","contentWidth","blockProps","className","style","updateEmailConfig","key","value","createElement","Fragment","onChange","newAlign","controls","title","label","min","max","step","help","messageTitle","receivers","successMessage","errorMessage","color","tagName","placeholder","backgroundImage","type","disabled","rows","registerBlockType","metadata","name","edit","save"],"sourceRoot":""}